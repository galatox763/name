-- Load the Orion library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "ZlyzoxX's Hub", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

-- Create tabs for the GUI
local MainTab = Window:MakeTab({
    Name = "üè† Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

MainTab:AddButton({
    Name = "üéÄResetüéÄ",
    Callback = function()
        local player = game.Players.LocalPlayer
        if player and player.Character then
            player.Character:BreakJoints()
            OrionLib:MakeNotification({
                Name = "Character Reset",
                Content = "Your character has been reset",
                Image = "rbxassetid://4483345998",
                Time = 3
            })
        end
    end
})

MainTab:AddButton({
    Name = "Button 2",
    Callback = function()
        OrionLib:MakeNotification({
            Name = "Button 2",
            Content = "You clicked Button 2",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
})

MainTab:AddButton({
    Name = "Button 3",
    Callback = function()
        OrionLib:MakeNotification({
            Name = "Button 3",
            Content = "You clicked Button 3",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
})

MainTab:AddButton({
    Name = "Button 4",
    Callback = function()
        OrionLib:MakeNotification({
            Name = "Button 4",
            Content = "You clicked Button 4",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
})

local TpTab = Window:MakeTab({
    Name = "Tp utilities",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local RandomTab = Window:MakeTab({
    Name = "Random",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local GameScriptsTab = Window:MakeTab({
    Name = "Game Scripts",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local DaycareTab = Window:MakeTab({
    Name = "Daycare",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Variables for teleportation and speed adjustment
local teleportKeyword = ""
local tweenKeyword = ""
local listening = false
local speedListening = false
local connections = {}
local speedConnections = {}
local minTweenSpeed = 1000
local defaultSpeed = 16

-- Function to teleport to a player when a keyword is spoken
local function teleportOnKeyword()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer

    local function onPlayerChatted(player, message)
        if listening and string.lower(message) == string.lower(teleportKeyword) then
            if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local targetPosition = player.Character.HumanoidRootPart.Position
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
                end
            end
        end
    end

    for _, player in pairs(Players:GetPlayers()) do
        local connection = player.Chatted:Connect(function(message)
            onPlayerChatted(player, message)
        end)
        table.insert(connections, connection)
    end

    local connection = Players.PlayerAdded:Connect(function(newPlayer)
        local connection = newPlayer.Chatted:Connect(function(message)
            onPlayerChatted(newPlayer, message)
        end)
        table.insert(connections, connection)
    end)
    table.insert(connections, connection)
end

-- Function to tween to a player when a keyword is spoken
local function tweenToPlayer()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local TweenService = game:GetService("TweenService")

    local function onPlayerChatted(player, message)
        if listening and string.lower(message) == string.lower(tweenKeyword) then
            if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local targetPosition = player.Character.HumanoidRootPart.Position
                local distance = (targetPosition - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                local tweenTime = math.max(1, distance / minTweenSpeed)
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
                    local tweenGoal = {CFrame = CFrame.new(targetPosition)}
                    local tween = TweenService:Create(LocalPlayer.Character.HumanoidRootPart, tweenInfo, tweenGoal)
                    tween:Play()
                end
            end
        end
    end

    for _, player in pairs(Players:GetPlayers()) do
        local connection = player.Chatted:Connect(function(message)
            onPlayerChatted(player, message)
        end)
        table.insert(connections, connection)
    end

    local connection = Players.PlayerAdded:Connect(function(newPlayer)
        local connection = newPlayer.Chatted:Connect(function(message)
            onPlayerChatted(newPlayer, message)
        end)
        table.insert(connections, connection)
    end)
    table.insert(connections, connection)
end

-- Function to adjust player speed based on chat commands
local function adjustSpeed()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer

    local function onPlayerChatted(player, message)
        if speedListening then
            local args = message:split(" ")
            if args[1] == "!speed" and tonumber(args[2]) then
                local speed = tonumber(args[2])
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                    LocalPlayer.Character.Humanoid.WalkSpeed = speed
                    print("Speed changed to: " .. tostring(speed))
                end
            elseif args[1] == "!speed" and args[2] == "reset" then
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                    LocalPlayer.Character.Humanoid.WalkSpeed = defaultSpeed
                    print("Speed reset to default value: " .. tostring(defaultSpeed))
                end
            end
        end
    end

    for _, player in pairs(Players:GetPlayers()) do
        local connection = player.Chatted:Connect(function(message)
            onPlayerChatted(player, message)
        end)
        table.insert(speedConnections, connection)
    end

    local connection = Players.PlayerAdded:Connect(function(newPlayer)
        local connection = newPlayer.Chatted:Connect(function(message)
            onPlayerChatted(newPlayer, message)
        end)
        table.insert(speedConnections, connection)
    end)
    table.insert(speedConnections, connection)
end

-- Function to stop listening for speed commands
local function stopSpeedListening()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    speedListening = false
    for _, connection in ipairs(speedConnections) do
        connection:Disconnect()
    end
    speedConnections = {}
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.WalkSpeed = defaultSpeed
        print("Speed reset to default value: " .. tostring(defaultSpeed))
    end
end

-- Function to stop listening for teleportation commands
local function stopListening()
    listening = false
    for _, connection in ipairs(connections) do
        connection:Disconnect()
    end
    connections = {}
end

-- Toggle for teleportation on keyword
TpTab:AddToggle({
    Name = "Teleport on keyword",
    Default = false,
    Callback = function(Value)
        print("Toggle 1: " .. tostring(Value))
        listening = Value
        if Value == true then
            teleportOnKeyword()
        else
            stopListening()
        end
    end    
})

-- Textbox for teleportation keyword
TpTab:AddTextbox({
    Name = "Keyword",
    Default = "",
    TextDisappear = true,
    Callback = function(Value)
        teleportKeyword = Value
        print("Keyword set to: " .. teleportKeyword)
    end
})

-- Toggle for tween teleportation on keyword
TpTab:AddToggle({
    Name = "Tween Teleport on keyword",
    Default = false,
    Callback = function(Value)
        print("Toggle 2: " .. tostring(Value))
        listening = Value
        if Value == true then
            tweenToPlayer()
        else
            stopListening()
        end
    end    
})

-- Textbox for tween keyword
TpTab:AddTextbox({
    Name = "Tween Keyword",
    Default = "",
    TextDisappear = true,
    Callback = function(Value)
        tweenKeyword = Value
        print("Tween Keyword set to: " .. tweenKeyword)
    end
})

-- Additional toggle buttons in the teleportation tab
for i = 3, 9 do
    TpTab:AddToggle({
        Name = "Toggle Button " .. i,
        Default = false,
        Callback = function(Value)
            print("Toggle " .. i .. ": " .. tostring(Value))
        end    
    })
end

-- Toggle for speed adjustment commands
RandomTab:AddToggle({
    Name = "!speed [number] / !speed reset",
    Default = false,
    Callback = function(Value)
        print("Command Toggle 1: " .. tostring(Value))
        speedListening = Value
        if Value == true then
            adjustSpeed()
        else
            stopSpeedListening()
        end
    end    
})

-- Button to load Lunar Bot Chat AI
RandomTab:AddButton({
    Name = "Lunar Bot Chat AI",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/probablYnicKxD/ProjectLunar/main/LunarBot/Source.lua"))()
    end
})

-- Button to execute Jerk Off Tool script
RandomTab:AddButton({
    Name = "Execute Jerk Off Tool Script",
    Callback = function()
        loadstring(game:HttpGet("https://pastefy.app/wa3v2Vgm/raw"))()
    end
})

-- Button to execute Nameless Admin script
RandomTab:AddButton({
    Name = "Nameless Admin",
    Callback = function()
        loadstring(game:HttpGet("https://github.com/FilteringEnabled/NamelessAdmin/blob/main/Source?raw=true"))()
    end
})

-- Game Scripts Tab button to execute Speed Hub X
GameScriptsTab:AddButton({
    Name = "Execute Speed Hub X",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Speed-Hub-X/main/Speed%20Hub%20X.lua", true))()
    end
})

-- Button to execute Telekinesis Script
RandomTab:AddButton({
    Name = "Execute Telekinesis Script",
    Callback = function()
        -- Telekinesis script code (omitted for brevity)
    end
})

-- Add Infinite Yield button in the Random tab
RandomTab:AddButton({
    Name = "Infinite Yield",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end
})

-- Add AFEM emotes button to Random tab
RandomTab:AddButton({
    Name = "AFEM emotes",
    Callback = function()
        loadstring(game:HttpGet("https://yarhm.goteamst.com/scr?channel=afem", false))()
    end
})

-- Add Universe Viewer button to Random tab
RandomTab:AddButton({
    Name = "Universe Viewer",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/uuuuuuu/main/Universe%20Viewer"))();
    end
})

-- Additional command toggles in the Random tab
for i = 2, 10 do
    RandomTab:AddToggle({
        Name = "Command Toggle " .. i,
        Default = false,
        Callback = function(Value)
            print("Command Toggle " .. i .. ": " .. tostring(Value))
        end    
    })
end

-- Daycare Tab Milk Automation
local autoClickMilk = false
local milkAutoClickSpeed = 0.1
local autoEquipDropMilk = false
local milkEquipDropSpeed = 0.1

-- Auto Click Milk Function
local function autoClickMilkFunc()
    local clickDetector = nil
    
    -- Method 1: Direct path
    local storeFreezer = workspace:FindFirstChild("Store Freezer")
    if storeFreezer then
        local milk = storeFreezer:FindFirstChild("Milk")
        if milk then
            clickDetector = milk:FindFirstChildOfClass("ClickDetector")
        end
    end
    
    -- Method 2: Search entire workspace if direct path fails
    if not clickDetector then
        for _, v in pairs(workspace:GetDescendants()) do
            if v:IsA("ClickDetector") and 
               (string.lower(v.Parent.Name):find("milk") or 
                string.lower(v.Parent.Parent.Name):find("milk")) then
                clickDetector = v
                break
            end
        end
    end
    
    -- Attempt to click
    if clickDetector then
        fireclickdetector(clickDetector)
    end
end

-- Auto Equip and Drop Milk Function
local function autoEquipDropMilkFunc()
    local player = game.Players.LocalPlayer
    local backpack = player.Backpack
    local character = player.Character
    
    -- Check both backpack and character for milk tools
    local function dropMilkTool(tool)
        -- Unequip current tool if any
        local currentTool = character:FindFirstChildWhichIsA("Tool")
        if currentTool then
            currentTool.Parent = backpack
        end
        
        -- Equip milk tool
        tool.Parent = character
        
        -- Immediately drop the milk tool
        tool.Parent = workspace
    end
    
    -- Check backpack
    for _, tool in pairs(backpack:GetChildren()) do
        if string.lower(tool.Name):find("milk") then
            dropMilkTool(tool)
            break
        end
    end
    
    -- Check character (in case milk was picked up)
    for _, tool in pairs(character:GetChildren()) do
        if string.lower(tool.Name):find("milk") then
            dropMilkTool(tool)
            break
        end
    end
end

-- Milk Section
local MilkSection = DaycareTab:AddSection({
    Name = "ü•õ MILK ü•õ"
})

MilkSection:AddToggle({
    Name = "Auto Click Milk",
    Default = false,
    Callback = function(Value)
        autoClickMilk = Value
        
        spawn(function()
            local isRunning = true
            while isRunning do
                if not autoClickMilk then
                    isRunning = false
                    break
                end
                autoClickMilkFunc()
                wait(milkAutoClickSpeed)
            end
        end)
    end
})

MilkSection:AddButton({
    Name = "Click Milk",
    Callback = function()
        autoClickMilkFunc()
    end
})

MilkSection:AddSlider({
    Name = "Auto Click Speed",
    Min = 0.01,
    Max = 1,
    Increment = 0.01,
    Default = 0.1,
    Callback = function(Value)
        milkAutoClickSpeed = Value
    end
})

MilkSection:AddToggle({
    Name = "Auto Equip & Drop Milk",
    Default = false,
    Callback = function(Value)
        autoEquipDropMilk = Value
        
        spawn(function()
            local isRunning = true
            while isRunning do
                if not autoEquipDropMilk then
                    isRunning = false
                    break
                end
                autoEquipDropMilkFunc()
                wait(milkEquipDropSpeed)
            end
        end)
    end
})

MilkSection:AddButton({
    Name = "Equip & Drop Milk",
    Callback = function()
        autoEquipDropMilkFunc()
    end
})

MilkSection:AddSlider({
    Name = "Equip & Drop Speed",
    Min = 0.01,
    Max = 1,
    Increment = 0.01,
    Default = 0.1,
    Callback = function(Value)
        milkEquipDropSpeed = Value
    end
})

-- Auto Click Functions for Various ClickDetectors
local autoClickPopsicle = false
local autoClickSandwich = false
local autoClickMedKit = false
local autoClickStar = false
local clickDetectorAutoClickSpeed = 0.1

--[[
    =====================
    CLICK DETECTOR FUNCTIONS
    =====================
]]

-- Auto Click Popsicle Function
local function autoClickPopsicleFunc()
    local clickDetector = nil
    
    -- Method 1: Direct path
    local storeFreezer = workspace:FindFirstChild("Store Freezer")
    if storeFreezer then
        local popsicle = storeFreezer:FindFirstChild("Popsicle")
        if popsicle then
            clickDetector = popsicle:FindFirstChildOfClass("ClickDetector")
        end
    end
    
    -- Method 2: Search entire workspace if direct path fails
    if not clickDetector then
        for _, v in pairs(workspace:GetDescendants()) do
            if v:IsA("ClickDetector") and 
               (string.lower(v.Parent.Name):find("popsicle") or 
                string.lower(v.Parent.Parent.Name):find("popsicle")) then
                clickDetector = v
                break
            end
        end
    end
    
    -- Attempt to click
    if clickDetector then
        fireclickdetector(clickDetector)
    end
end

-- Auto Click Sandwich Function
local function autoClickSandwichFunc()
    local clickDetector = nil
    
    -- Method 1: Direct path
    local storeFreezer = workspace:FindFirstChild("Store Freezer")
    if storeFreezer then
        local sandwich = storeFreezer:FindFirstChild("Sandwich")
        if sandwich then
            clickDetector = sandwich:FindFirstChildOfClass("ClickDetector")
        end
    end
    
    -- Method 2: Search entire workspace if direct path fails
    if not clickDetector then
        for _, v in pairs(workspace:GetDescendants()) do
            if v:IsA("ClickDetector") and 
               (string.lower(v.Parent.Name):find("sandwich") or 
                string.lower(v.Parent.Parent.Name):find("sandwich")) then
                clickDetector = v
                break
            end
        end
    end
    
    -- Attempt to click
    if clickDetector then
        fireclickdetector(clickDetector)
    end
end

-- Auto Click Med-Kit Function
local function autoClickMedKitFunc()
    local clickDetector = nil
    
    -- Method 1: Direct path
    local chalkShelf = workspace:FindFirstChild("ChalkShelf")
    if chalkShelf then
        local medKit = chalkShelf:FindFirstChild("Med-Kit")
        if medKit then
            clickDetector = medKit:FindFirstChildOfClass("ClickDetector")
        end
    end
    
    -- Method 2: Search entire workspace if direct path fails
    if not clickDetector then
        for _, v in pairs(workspace:GetDescendants()) do
            if v:IsA("ClickDetector") and 
               (string.lower(v.Parent.Name):find("med[-]?kit") or 
                string.lower(v.Parent.Parent.Name):find("med[-]?kit")) then
                clickDetector = v
                break
            end
        end
    end
    
    -- Attempt to click
    if clickDetector then
        fireclickdetector(clickDetector)
    end
end

-- Auto Click Star Function
local function autoClickStarFunc()
    local clickDetector = nil
    
    -- Method 1: Direct path
    local chalkShelf = workspace:FindFirstChild("ChalkShelf")
    if chalkShelf then
        local star = chalkShelf:FindFirstChild("Star")
        if star then
            clickDetector = star:FindFirstChildOfClass("ClickDetector")
        end
    end
    
    -- Method 2: Search entire workspace if direct path fails
    if not clickDetector then
        for _, v in pairs(workspace:GetDescendants()) do
            if v:IsA("ClickDetector") and 
               (string.lower(v.Parent.Name):find("star") or 
                string.lower(v.Parent.Parent.Name):find("star")) then
                clickDetector = v
                break
            end
        end
    end
    
    -- Attempt to click
    if clickDetector then
        fireclickdetector(clickDetector)
    end
end

-- Click Detector Section
local ClickDetectorSection = DaycareTab:AddSection({
    Name = "üéØ CLICK DETECTORS üéØ"
})

ClickDetectorSection:AddToggle({
    Name = "Auto Click Popsicle",
    Default = false,
    Callback = function(Value)
        autoClickPopsicle = Value
        
        spawn(function()
            while autoClickPopsicle do
                autoClickPopsicleFunc()
                wait(clickDetectorAutoClickSpeed)
            end
        end)
    end
})

ClickDetectorSection:AddButton({
    Name = "Click Popsicle",
    Callback = function()
        autoClickPopsicleFunc()
    end
})

ClickDetectorSection:AddToggle({
    Name = "Auto Click Sandwich",
    Default = false,
    Callback = function(Value)
        autoClickSandwich = Value
        
        spawn(function()
            while autoClickSandwich do
                autoClickSandwichFunc()
                wait(clickDetectorAutoClickSpeed)
            end
        end)
    end
})

ClickDetectorSection:AddButton({
    Name = "Click Sandwich",
    Callback = function()
        autoClickSandwichFunc()
    end
})

ClickDetectorSection:AddToggle({
    Name = "Auto Click Med-Kit",
    Default = false,
    Callback = function(Value)
        autoClickMedKit = Value
        
        spawn(function()
            while autoClickMedKit do
                autoClickMedKitFunc()
                wait(clickDetectorAutoClickSpeed)
            end
        end)
    end
})

ClickDetectorSection:AddButton({
    Name = "Click Med-Kit",
    Callback = function()
        autoClickMedKitFunc()
    end
})

ClickDetectorSection:AddToggle({
    Name = "Auto Click Star",
    Default = false,
    Callback = function(Value)
        autoClickStar = Value
        
        spawn(function()
            while autoClickStar do
                autoClickStarFunc()
                wait(clickDetectorAutoClickSpeed)
            end
        end)
    end
})

ClickDetectorSection:AddButton({
    Name = "Click Star",
    Callback = function()
        autoClickStarFunc()
    end
})

ClickDetectorSection:AddSlider({
    Name = "Auto Click Speed",
    Min = 0.01,
    Max = 1,
    Increment = 0.01,
    Default = 0.1,
    Callback = function(Value)
        clickDetectorAutoClickSpeed = Value
    end
})

-- Become Scientist Variables
local autoClickScientist = false
local scientistAutoClickSpeed = 0.1

-- Become Scientist Function
local function autoClickScientistFunc()
    local clickDetector = nil
    
    -- Search entire workspace for Scientist ClickDetector
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "BecomeScientistButton" then
            local button = v:FindFirstChild("Button")
            if button then
                clickDetector = button:FindFirstChildOfClass("ClickDetector")
                if clickDetector then
                    break
                end
            end
        end
    end
    
    -- Attempt to click
    if clickDetector then
        -- Multiple click methods
        pcall(function()
            clickDetector:MouseClick()
        end)
        
        -- Additional click method
        if fireclickdetector then
            pcall(function() 
                fireclickdetector(clickDetector) 
            end)
        end
    end
end

-- Become Scientist Section
local BecomeScientistSection = DaycareTab:AddSection({
    Name = "üî• Become Scientist üî•"
})

BecomeScientistSection:AddToggle({
    Name = "Auto Click Scientist",
    Default = false,
    Callback = function(Value)
        autoClickScientist = Value
        
        spawn(function()
            local isRunning = true
            while isRunning do
                if not autoClickScientist then
                    isRunning = false
                    break
                end
                
                -- Check if player is in Scientist team
                local player = game.Players.LocalPlayer
                local team = player.Team
                
                if team and team.Name ~= "Scientists" then
                    autoClickScientistFunc()
                else
                    isRunning = false
                    break
                end
                
                wait(scientistAutoClickSpeed)
            end
        end)
    end
})

BecomeScientistSection:AddButton({
    Name = "Click Scientist",
    Callback = function()
        autoClickScientistFunc()
    end
})

BecomeScientistSection:AddSlider({
    Name = "Auto Click Speed",
    Min = 0.01,
    Max = 1,
    Increment = 0.01,
    Default = 0.1,
    Callback = function(Value)
        scientistAutoClickSpeed = Value
    end
})

-- ChalkShelf Item Variables
local autoClickFireExtinguisher = false
local autoClickWateringCan = false
local autoClickTeddi = false
local autoClickBouncy = false

local chalkShelfAutoClickSpeed = 0.1

-- Auto Click Fire Extinguisher Function
local function autoClickFireExtinguisherFunc()
    local clickDetector = nil
    
    -- Search entire workspace for Fire Extinguisher ClickDetector
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("ClickDetector") and 
           (string.lower(v.Parent.Name):find("fire extinguisher") or 
            string.lower(v.Parent.Parent.Name):find("fire extinguisher")) then
            clickDetector = v
            break
        end
    end
    
    -- Attempt to click
    if clickDetector then
        fireclickdetector(clickDetector)
    end
end

-- Auto Click Watering Can Function
local function autoClickWateringCanFunc()
    local clickDetector = nil
    
    -- Search entire workspace for Watering Can ClickDetector
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("ClickDetector") and 
           (string.lower(v.Parent.Name):find("watering can") or 
            string.lower(v.Parent.Parent.Name):find("watering can")) then
            clickDetector = v
            break
        end
    end
    
    -- Attempt to click
    if clickDetector then
        fireclickdetector(clickDetector)
    end
end

-- Auto Click Teddi Function
local function autoClickTeddiFunc()
    local clickDetector = nil
    
    -- Search entire workspace for Teddi ClickDetector
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("ClickDetector") and 
           (string.lower(v.Parent.Name):find("teddi") or 
            string.lower(v.Parent.Parent.Name):find("teddi")) then
            clickDetector = v
            break
        end
    end
    
    -- Attempt to click
    if clickDetector then
        fireclickdetector(clickDetector)
    end
end

-- Auto Click Bouncy Function
local function autoClickBouncyFunc()
    local clickDetector = nil
    
    -- Search entire workspace for Bouncy ClickDetector
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("ClickDetector") and 
           (string.lower(v.Parent.Name):find("bouncy") or 
            string.lower(v.Parent.Parent.Name):find("bouncy")) then
            clickDetector = v
            break
        end
    end
    
    -- Attempt to click
    if clickDetector then
        fireclickdetector(clickDetector)
    end
end

-- ChalkShelf Section
local ChalkShelfSection = DaycareTab:AddSection({
    Name = "üß™ ChalkShelf Items üß™"
})

-- Fire Extinguisher Toggle and Button
ChalkShelfSection:AddToggle({
    Name = "Auto Click Fire Extinguisher",
    Default = false,
    Callback = function(Value)
        autoClickFireExtinguisher = Value
        
        spawn(function()
            while autoClickFireExtinguisher do
                autoClickFireExtinguisherFunc()
                wait(chalkShelfAutoClickSpeed)
            end
        end)
    end
})

ChalkShelfSection:AddButton({
    Name = "Click Fire Extinguisher",
    Callback = function()
        autoClickFireExtinguisherFunc()
    end
})

-- Watering Can Toggle and Button
ChalkShelfSection:AddToggle({
    Name = "Auto Click Watering Can",
    Default = false,
    Callback = function(Value)
        autoClickWateringCan = Value
        
        spawn(function()
            while autoClickWateringCan do
                autoClickWateringCanFunc()
                wait(chalkShelfAutoClickSpeed)
            end
        end)
    end
})

ChalkShelfSection:AddButton({
    Name = "Click Watering Can",
    Callback = function()
        autoClickWateringCanFunc()
    end
})

-- Teddi Toggle and Button
ChalkShelfSection:AddToggle({
    Name = "Auto Click Teddi",
    Default = false,
    Callback = function(Value)
        autoClickTeddi = Value
        
        spawn(function()
            while autoClickTeddi do
                autoClickTeddiFunc()
                wait(chalkShelfAutoClickSpeed)
            end
        end)
    end
})

ChalkShelfSection:AddButton({
    Name = "Click Teddi",
    Callback = function()
        autoClickTeddiFunc()
    end
})

-- Bouncy Toggle and Button
ChalkShelfSection:AddToggle({
    Name = "Auto Click Bouncy",
    Default = false,
    Callback = function(Value)
        autoClickBouncy = Value
        
        spawn(function()
            while autoClickBouncy do
                autoClickBouncyFunc()
                wait(chalkShelfAutoClickSpeed)
            end
        end)
    end
})

ChalkShelfSection:AddButton({
    Name = "Click Bouncy",
    Callback = function()
        autoClickBouncyFunc()
    end
})

-- ChalkShelf Click Speed Slider
ChalkShelfSection:AddSlider({
    Name = "Auto Click Speed",
    Min = 0.01,
    Max = 1,
    Increment = 0.01,
    Default = 0.1,
    Callback = function(Value)
        chalkShelfAutoClickSpeed = Value
    end
})

-- Initialize the Orion library
OrionLib:Init()
