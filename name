-- Load the Orion library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "ZlyzoxX's Hub", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

-- Create tabs for the GUI
local TpTab = Window:MakeTab({
    Name = "Tp utilities",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local RandomTab = Window:MakeTab({
    Name = "Random",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local GameScriptsTab = Window:MakeTab({
    Name = "Game Scripts",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Notification to indicate the script has executed
OrionLib:MakeNotification({
    Name = "Script executed!",
    Content = ".",
    Image = "rbxassetid://4483345998",
    Time = 5
})

-- Variables for teleportation and speed adjustment
local teleportKeyword = ""
local tweenKeyword = ""
local listening = false
local speedListening = false
local connections = {}
local speedConnections = {}
local minTweenSpeed = 1000
local defaultSpeed = 16

-- Function to teleport to a player when a keyword is spoken
local function teleportOnKeyword()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer

    local function onPlayerChatted(player, message)
        if listening and string.lower(message) == string.lower(teleportKeyword) then
            if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local targetPosition = player.Character.HumanoidRootPart.Position
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
                end
            end
        end
    end

    for _, player in pairs(Players:GetPlayers()) do
        local connection = player.Chatted:Connect(function(message)
            onPlayerChatted(player, message)
        end)
        table.insert(connections, connection)
    end

    local connection = Players.PlayerAdded:Connect(function(newPlayer)
        local connection = newPlayer.Chatted:Connect(function(message)
            onPlayerChatted(newPlayer, message)
        end)
        table.insert(connections, connection)
    end)
    table.insert(connections, connection)
end

-- Function to tween to a player when a keyword is spoken
local function tweenToPlayer()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local TweenService = game:GetService("TweenService")

    local function onPlayerChatted(player, message)
        if listening and string.lower(message) == string.lower(tweenKeyword) then
            if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local targetPosition = player.Character.HumanoidRootPart.Position
                local distance = (targetPosition - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                local tweenTime = math.max(1, distance / minTweenSpeed)
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
                    local tweenGoal = {CFrame = CFrame.new(targetPosition)}
                    local tween = TweenService:Create(LocalPlayer.Character.HumanoidRootPart, tweenInfo, tweenGoal)
                    tween:Play()
                end
            end
        end
    end

    for _, player in pairs(Players:GetPlayers()) do
        local connection = player.Chatted:Connect(function(message)
            onPlayerChatted(player, message)
        end)
        table.insert(connections, connection)
    end

    local connection = Players.PlayerAdded:Connect(function(newPlayer)
        local connection = newPlayer.Chatted:Connect(function(message)
            onPlayerChatted(newPlayer, message)
        end)
        table.insert(connections, connection)
    end)
    table.insert(connections, connection)
end

-- Function to adjust player speed based on chat commands
local function adjustSpeed()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer

    local function onPlayerChatted(player, message)
        if speedListening then
            local args = message:split(" ")
            if args[1] == "!speed" and tonumber(args[2]) then
                local speed = tonumber(args[2])
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                    LocalPlayer.Character.Humanoid.WalkSpeed = speed
                    print("Speed changed to: " .. tostring(speed))
                end
            elseif args[1] == "!speed" and args[2] == "reset" then
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                    LocalPlayer.Character.Humanoid.WalkSpeed = defaultSpeed
                    print("Speed reset to default value: " .. tostring(defaultSpeed))
                end
            end
        end
    end

    for _, player in pairs(Players:GetPlayers()) do
        local connection = player.Chatted:Connect(function(message)
            onPlayerChatted(player, message)
        end)
        table.insert(speedConnections, connection)
    end

    local connection = Players.PlayerAdded:Connect(function(newPlayer)
        local connection = newPlayer.Chatted:Connect(function(message)
            onPlayerChatted(newPlayer, message)
        end)
        table.insert(speedConnections, connection)
    end)
    table.insert(speedConnections, connection)
end

-- Function to stop listening for speed commands
local function stopSpeedListening()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    speedListening = false
    for _, connection in ipairs(speedConnections) do
        connection:Disconnect()
    end
    speedConnections = {}
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.WalkSpeed = defaultSpeed
        print("Speed reset to default value: " .. tostring(defaultSpeed))
    end
end

-- Function to stop listening for teleportation commands
local function stopListening()
    listening = false
    for _, connection in ipairs(connections) do
        connection:Disconnect()
    end
    connections = {}
end

-- Toggle for teleportation on keyword
TpTab:AddToggle({
    Name = "Teleport on keyword",
    Default = false,
    Callback = function(Value)
        print("Toggle 1: " .. tostring(Value))
        listening = Value
        if Value == true then
            teleportOnKeyword()
        else
            stopListening()
        end
    end    
})

-- Textbox for teleportation keyword
TpTab:AddTextbox({
    Name = "Keyword",
    Default = "",
    TextDisappear = true,
    Callback = function(Value)
        teleportKeyword = Value
        print("Keyword set to: " .. teleportKeyword)
    end
})

-- Toggle for tween teleportation on keyword
TpTab:AddToggle({
    Name = "Tween Teleport on keyword",
    Default = false,
    Callback = function(Value)
        print("Toggle 2: " .. tostring(Value))
        listening = Value
        if Value == true then
            tweenToPlayer()
        else
            stopListening()
        end
    end    
})

-- Textbox for tween keyword
TpTab:AddTextbox({
    Name = "Tween Keyword",
    Default = "",
    TextDisappear = true,
    Callback = function(Value)
        tweenKeyword = Value
        print("Tween Keyword set to: " .. tweenKeyword)
    end
})

-- Additional toggle buttons in the teleportation tab
for i = 3, 9 do
    TpTab:AddToggle({
        Name = "Toggle Button " .. i,
        Default = false,
        Callback = function(Value)
            print("Toggle " .. i .. ": " .. tostring(Value))
        end    
    })
end

-- Toggle for speed adjustment commands
RandomTab:AddToggle({
    Name = "!speed [number] / !speed reset",
    Default = false,
    Callback = function(Value)
        print("Command Toggle 1: " .. tostring(Value))
        speedListening = Value
        if Value == true then
            adjustSpeed()
        else
            stopSpeedListening()
        end
    end    
})

-- Button to load Lunar Bot Chat AI
RandomTab:AddButton({
    Name = "Lunar Bot Chat AI",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/probablYnicKxD/ProjectLunar/main/LunarBot/Source.lua"))()
    end
})

-- Button to execute Jerk Off Tool script
RandomTab:AddButton({
    Name = "Execute Jerk Off Tool Script",
    Callback = function()
        loadstring(game:HttpGet("https://pastefy.app/wa3v2Vgm/raw"))()
    end
})

-- Game Scripts Tab button to execute Speed Hub X
GameScriptsTab:AddButton({
    Name = "Execute Speed Hub X",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Speed-Hub-X/main/Speed%20Hub%20X.lua", true))()
    end
})

-- Button to execute Telekinesis Script
RandomTab:AddButton({
    Name = "Execute Telekinesis Script",
    Callback = function()
        -- Telekinesis script code here...
        -- (The full telekinesis script code is omitted for brevity)
    end
})

-- Add Infinite Yield button in the Random tab
RandomTab:AddButton({
    Name = "Infinite Yield",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end
})

-- Additional command toggles in the Random tab
for i = 2, 10 do
    RandomTab:AddToggle({
        Name = "Command Toggle " .. i,
        Default = false,
        Callback = function(Value)
            print("Command Toggle " .. i .. ": " .. tostring(Value))
        end    
    })
end

-- Initialize the Orion library
OrionLib:Init()
