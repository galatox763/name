local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "ZlyzoxX's Hub", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

local TpTab = Window:MakeTab({
    Name = "Tp utilitys",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local CommandsTab = Window:MakeTab({
    Name = "Commands",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

OrionLib:MakeNotification({
    Name = "Script éxécuté!",
    Content = ".",
    Image = "rbxassetid://4483345998",
    Time = 5
})

local teleportKeyword = ""
local tweenKeyword = ""
local listening = false
local connections = {}
local minTweenSpeed = 1000 -- Vitesse minimale pour le tween tp

local function teleportOnKeyword()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer

    -- Fonction pour écouter les messages du chat
    local function onPlayerChatted(player, message)
        if listening and string.lower(message) == string.lower(teleportKeyword) then
            -- Vérifie si le joueur est valide
            if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local targetPosition = player.Character.HumanoidRootPart.Position
                -- Téléportation
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
                end
            end
        end
    end

    -- Écoute les messages du chat pour tous les joueurs
    for _, player in pairs(Players:GetPlayers()) do
        local connection = player.Chatted:Connect(function(message)
            onPlayerChatted(player, message)
        end)
        table.insert(connections, connection)
    end

    -- Ajout d'une écoute pour les nouveaux joueurs rejoignant la partie
    local connection = Players.PlayerAdded:Connect(function(newPlayer)
        local connection = newPlayer.Chatted:Connect(function(message)
            onPlayerChatted(newPlayer, message)
        end)
        table.insert(connections, connection)
    end)
    table.insert(connections, connection)
end

local function tweenToPlayer()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local TweenService = game:GetService("TweenService")

    -- Fonction pour écouter les messages du chat
    local function onPlayerChatted(player, message)
        if listening and string.lower(message) == string.lower(tweenKeyword) then
            -- Vérifie si le joueur est valide
            if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local targetPosition = player.Character.HumanoidRootPart.Position
                -- Calcule la distance entre le joueur local et le joueur cible
                local distance = (targetPosition - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                -- Calcule le temps de tween en fonction de la distance avec une vitesse minimale
                local tweenTime = math.max(1, distance / minTweenSpeed)
                -- Téléportation avec tween
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
                    local tweenGoal = {CFrame = CFrame.new(targetPosition)}
                    local tween = TweenService:Create(LocalPlayer.Character.HumanoidRootPart, tweenInfo, tweenGoal)
                    tween:Play()
                end
            end
        end
    end

    -- Écoute les messages du chat pour tous les joueurs
    for _, player in pairs(Players:GetPlayers()) do
        local connection = player.Chatted:Connect(function(message)
            onPlayerChatted(player, message)
        end)
        table.insert(connections, connection)
    end

    -- Ajout d'une écoute pour les nouveaux joueurs rejoignant la partie
    local connection = Players.PlayerAdded:Connect(function(newPlayer)
        local connection = newPlayer.Chatted:Connect(function(message)
            onPlayerChatted(newPlayer, message)
        end)
        table.insert(connections, connection)
    end)
    table.insert(connections, connection)
end

local function stopListening()
    listening = false
    for _, connection in ipairs(connections) do
        connection:Disconnect()
    end
    connections = {}
end

TpTab:AddToggle({
    Name = "Tp on keyword",
    Default = false,
    Callback = function(Value)
        print("Toggle 1: " .. tostring(Value))
        listening = Value
        if Value == true then
            teleportOnKeyword()
        else
            stopListening()
        end
    end    
})

TpTab:AddTextbox({
    Name = "Keyword",
    Default = "",
    TextDisappear = true,
    Callback = function(Value)
        teleportKeyword = Value
        print("Keyword set to: " .. teleportKeyword)
    end
})

TpTab:AddToggle({
    Name = "Tween Tp on keyword",
    Default = false,
    Callback = function(Value)
        print("Toggle 2: " .. tostring(Value))
        listening = Value
        if Value == true then
            tweenToPlayer()
        else
            stopListening()
        end
    end    
})

TpTab:AddTextbox({
    Name = "Tween Keyword",
    Default = "",
    TextDisappear = true,
    Callback = function(Value)
        tweenKeyword = Value
        print("Tween Keyword set to: " .. tweenKeyword)
    end
})

for i = 3, 10 do
    TpTab:AddToggle({
        Name = "Toggle Button " .. i,
        Default = false,
        Callback = function(Value)
            print("Toggle " .. i .. ": " .. tostring(Value))
        end    
    })
end

for i = 1, 10 do
    CommandsTab:AddToggle({
        Name = "Command Toggle " .. i,
        Default = false,
        Callback = function(Value)
            print("Command Toggle " .. i .. ": " .. tostring(Value))
        end    
    })
end

OrionLib:Init()
-- destroying the interface: OrionLib:Destroy()
